'''
7-8 jmu-python-输入输出-格式化输出字符串 (15 分)
输入3行字符串，然后对其按照说明进行格式化输出

输入格式:
第1行：一个浮点数字符串
第2行：一个整数字符串
第3行：一个非数值型字符串

输出格式:
对浮点数字符串:
第1行： 保留2位小数输出
第2行： 分别输出浮点数的小写字母e的指数形式，大写字母e的指数形式， 百分数形式且其小数部分为2位。每个输出的元素之间以一个空格分隔。

对于整数：
第3行：在一行分别输出其二进制与小写十六进制，之间以一个空格分隔。

对非数值型字符串：
首先，去除掉字符串得左右空格。然后输出3行：
第4行，将全部字符转化为大写并输出。
第5行，将字符串右对齐输出，宽度为20。
第6行，将字符串居中输出，宽度20，两侧使用*填充。

最后:
第7行，将浮点数与整数以浮点数 + 整数 = 结果的形式输出

输入样例:
3.14159265
10
      abc 123     
输出样例:
3.14
3.141593e+00 3.141593E+00 314.16%
1010 a
ABC 123
             abc 123
******abc 123*******
3.14159265 + 10 = 13.14159265

'''
a=eval(input())
b=eval(input())
s=input()
print('{:.2f}'.format(a))
 
print('{:e}'.format(a),end=' ')
print('{:E}'.format(a),end=' ')
print('{:.2%}'.format(a))
 
print('{:b}'.format(b),end=' ')
print('{:x}'.format(b))
 
s=s.strip()
s.upper()
print('{}'.format(s.upper()))
 
print('{:>20}'.format(s))
 
print('{:*^20}'.format(s))
 
print('{} + {} = {}'.format(a,b,a+b))